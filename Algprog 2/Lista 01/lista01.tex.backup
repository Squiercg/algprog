\documentclass[a4paper,10pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[brazil]{babel}
\usepackage{listings}
\usepackage{enumerate}




\begin{document}
\lstset{language=c,numbers=left,numberstyle=\tiny,breaklines=true,frame=single}

\begin{titlepage}

\begin{center}
\textsc{\LARGE Algoritimos de programação II}\\[0.5cm]
\textsc{Professor: Marco Aurélio Stefanes}\\[2.5cm]
{ \huge \bfseries Lista 01 \\[0.4cm] }
\end{center}
\vspace{10cm}


\begin{minipage}{1.6\textwidth}
\begin{center}
\emph{Aluno:} \\
Augusto Cesar de Aquino Ribas\\
Análise de Sistemas\\
\end{center}
\end{minipage}%

\end{titlepage}

\newpage
\section{Aula 01-03 : Exercícios. 1.5 a 1.9}

\begin{enumerate}

\item 
\begin{enumerate}[(a)]

\item Escreva uma função recursiva com a seguinte interface:\\

\begin{lstlisting}
int soma_digitos(int n)
\end{lstlisting}

que receba um número inteiro positivo $n$ e devolva a soma de seus dígitos.\\

\item Escreva um programa que receba um número inteiro $n$ e imprima a soma de seus dígitos. Use a função do item (a).\\
\end{enumerate} %letras

\item  A \textbf{seqüência de Fibonacci} é uma seqüência de números inteiros positivos dada pela seguinte fórmula:
  \[ 
  \left\{ \begin{array}{rcl}
    F_1 & = & 1 \\
    F_2 & = & 1 \\
    F_i & = & F_{i-1} + F_{i-2},\ \textnormal{para}\ i\geq 3 
  \end{array}
  \right. 
  \]

\begin{enumerate}[(a)]
\item Escreva uma função recursiva com a seguinte interface:

\begin{lstlisting}
int Fib(int i)
\end{lstlisting}

que receba um número inteiro positivo $i$ e devolva o $i$-ésimo termo da seqüência de Fibonacci, isto é, $F_i$. 
  
\item Escreva um programa que receba um número inteiro $i \geq 1$ e imprima o termo $F_i$ da seqüência de Fibonacci. 
Use a função do item (a). 
\end{enumerate}



\item O \textbf{piso} de um número inteiro positivo $x$ é o único inteiro $i$ 
tal que $i \leq x < i + 1$. O piso de $x$ é denotado por $\lfloor x \rfloor$.   

Segue uma amostra de valores da função $\lfloor \log_2 n \rfloor$:

  \begin{center}
    \begin{tabular}{*{13}{r}}
      $n$ & 15 & 16 & 31 & 32 & 63 & 64 & 127 & 128 & 255 & 256 & 511
      & 512 \\ \cline{2-13}  
      $\lfloor \log_2 n \rfloor$ & 3 & 4 & 4 & 5 & 5 & 6 & 6 & 7 & 7 &
      8 & 8 & 9  
    \end{tabular}
  \end{center}

\begin{enumerate}[(a)]
\item Escreva uma função recursiva com a seguinte interface:

\begin{lstlisting}
int piso_log2(int n)
\end{lstlisting}

que receba um número inteiro positivo $n$ e devolva $\lfloor
\log_2 n \rfloor$. 

\item Escreva um programa que receba um número inteiro $n \geq 1$ e imprima $\lfloor \log_2 n \rfloor$. 
Use a função do item (a). 
\end{enumerate}

\item Considere o seguinte processo para gerar uma seqüência de números.
Comece com um inteiro $n$. Se $n$ é par, divida por $2$.
Se $n$ é ímpar, multiplique por $3$ e some $1$. 
Repita esse processo com o novo valor de $n$, terminando quando $n = 1$.
Por exemplo, a seqüência de números a seguir é gerada para $n = 22$:

  \[
  22 \hspace*{.5cm} 11 \hspace*{.5cm} 34 \hspace*{.5cm} 17 
  \hspace*{.5cm} 52 \hspace*{.5cm} 26 \hspace*{.5cm} 13 \hspace*{.5cm} 
  40 \hspace*{.5cm} 20 \hspace*{.5cm} 10 \hspace*{.5cm} 5
  \hspace*{.5cm} 16 \hspace*{.5cm} 8 \hspace*{.5cm} 4 \hspace*{.5cm} 2
  \hspace*{.5cm} 1   
  \]

É conjecturado que esse processo termina com $n = 1$ para todo inteiro $n > 0$.
Para uma entrada $n$, o \textbf{comprimento do ciclo de $n$} é o número de elementos gerados na seqüência.
No exemplo acima, o comprimento do ciclo de $22$ é $16$. 

\begin{enumerate}[(a)]
  \item Escreva uma função não-recursiva com a seguinte interface:

\begin{lstlisting}
int ciclo(int n)
\end{lstlisting}

que receba um número inteiro positivo $n$, mostre a seqüência gerada pelo processo descrito acima 
na saída e devolva o comprimento do ciclo de $n$. 

\item Escreva uma versão recursiva da função do item (a) com a seguinte interface: 

\begin{lstlisting}
int cicloR(int n)
\end{lstlisting}

que receba um número inteiro positivo $n$, mostre a seqüência gerada pelo processo descrito 
acima na saída e devolva o comprimento do ciclo de $n$. 

\item Escreva um programa que receba um número inteiro $n \geq 1$ e determine a seqüência gerada 
por esse processo e também o comprimento do ciclo de $n$. Use as funções em (a) e (b) para testar. 
\end{enumerate}


\item Podemos calcular a potência $x^n$ de uma maneira mais eficiente.
Observe primeiro que se $n$ é uma potência de 2 então $x^n$ pode ser computada usando seqüências de quadrados.
Por exemplo, $x^4$ é o quadrado de $x^2$ e assim $x^4$ pode ser computado usando somente duas multiplicações 
ao invés de três. Esta técnica pode ser usada mesmo quando $n$ não é uma potência de 2, usando a seguinte fórmula:


    x^n  &= \left\{ \begin{array}{ll}
        1\:, & \text{se $n = 0$,} \\
        (x^{n/2})^2\:, & \text{se $n$ é par,} \\
        x \cdot x^{n-1}\:, & \text{se $n$ é ímpar.}
      \end{array} \right. 

  
  
    \[ 
  \left\{ \begin{array}{rcl}
    F_1 & = & 1 \\
    F_2 & = & 1 \\
    F_i & = & F_{i-1} + F_{i-2},\ \textnormal{para}\ i\geq 3 
  \end{array}
  \right. 
  \]
  
  
  
  
  \begin{enumerate}[(a)]
  \item Escreva uma função com interface

\begin{lstlisting}
int potencia(int x, int n)
\end{lstlisting}

que receba dois números inteiros $x$ e $n$ e calcule e devolva $x^n$ usando a fórmula.
  
\item Escreva um programa que receba dois números inteiros $a$ e $b$ e imprima o valor de $a^b$.
  \end{enumerate}



\end{enumerate} %Números




\newpage
\section{Aula 05: Exercícios 2.6 a 2.10}

texto

\end{document}
